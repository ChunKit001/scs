<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>scs.web</groupId>
        <artifactId>scs</artifactId>
        <version>1.0.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>scs-start</artifactId>
    <packaging>jar</packaging>
    <name>scs-start</name>

    <dependencies>
        <dependency>
            <groupId>scs.web</groupId>
            <artifactId>scs-adapter</artifactId>
        </dependency>


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <!-- 启用 -parameters 编译器标志 -->
                    <compilerArgument>-parameters</compilerArgument>
<!--                    <annotationProcessorPaths>-->
<!--                        <path>-->
<!--                            <groupId>org.projectlombok</groupId>-->
<!--                            <artifactId>lombok</artifactId>-->
<!--                        </path>-->
<!--                        <path>-->
<!--                            <groupId>org.mapstruct</groupId>-->
<!--                            <artifactId>mapstruct-processor</artifactId>-->
<!--                        </path>-->
<!--                        <path>-->
<!--                            <groupId>org.projectlombok</groupId>-->
<!--                            <artifactId>lombok-mapstruct-binding</artifactId>-->
<!--                            <version>0.2.0</version>-->
<!--                        </path>-->
<!--                    </annotationProcessorPaths>-->
                </configuration>
            </plugin>
            <!--单元测试插件 配置参考 https://maven.apache.org/components/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <parallel>classes</parallel><!--类级别的并行-->
                    <reuseForks>true</reuseForks><!--jvm重用-->
                    <forkCount>1</forkCount><!--jvm只创建1个虚拟机-->
                    <threadCount>2</threadCount><!--因为perCoreThreadCount默认为true 此时表示每个cpu创建多少个thread-->
                </configuration>
            </plugin>
            <!--安全扫描插件 配置参考https://jeremylong.github.io/DependencyCheck/dependency-check-maven/configuration.html-->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check-maven.version}</version>
                <configuration>
                    <autoUpdate>true</autoUpdate>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--打包插件 https://blog.csdn.net/txhlxy/article/details/136066509-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>*.yml</exclude>
                        <exclude>*.properties</exclude>
                        <exclude>*.xml</exclude>
                        <exclude>**/i18n/**</exclude>
                    </excludes>
                    <archive>
                        <manifest>
                            <!--这个属性特别关键，如果没有这个属性，有时候我们引用的包maven库 下面可能会有多个包，并且只有一个是正确的，
                                        其余的可能是带时间戳的，此时会在classpath下面把那个带时间戳的给添加上去，然后我们 在依赖打包的时候，
                                        打的是正确的，所以两头会对不上，报错。 -->
                            <useUniqueVersions>false</useUniqueVersions>
                            <!-- 为依赖包添加路径, 这些路径会写在MANIFEST文件的Class-Path下 因为我们是零散包的结构 只需要这样设置 -->
                            <addClasspath>true</addClasspath>
                            <!-- 指定启动类的包路径 -->
                            <mainClass>com.scs.start.Application</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <!-- 复制依赖的jar包 -->
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- 将依赖的jar包复制到该路径下 -->
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <excludeArtifactIds>lombok</excludeArtifactIds>
                            <!-- 是否排除间接依赖，间接依赖也要拷贝 -->
                            <excludeTransitive>false</excludeTransitive>
                            <!-- 是否带上版本号 -->
                            <stripVersion>false</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!--混淆插件 配置参考 https://wvengen.github.io/proguard-maven-plugin/proguard-mojo.html-->
            <!--            哪个模块需要加密就复制这段plugin配置与proguarg.cfg过去-->
            <!--            <plugin>-->
            <!--                <groupId>com.github.wvengen</groupId>-->
            <!--                <artifactId>proguard-maven-plugin</artifactId>-->
            <!--                <executions>-->
            <!--                    <execution>-->
            <!--                        &lt;!&ndash; 打包的时候开始混淆&ndash;&gt;-->
            <!--                        <phase>package</phase>-->
            <!--                        <goals>-->
            <!--                            <goal>proguard</goal>-->
            <!--                        </goals>-->
            <!--                    </execution>-->
            <!--                </executions>-->
            <!--                <configuration>-->
            <!--                    <injar>${project.build.finalName}.jar</injar>-->
            <!--                    <outjar>${project.build.finalName}.jar</outjar>-->
            <!--                    <injarNotExistsSkip>true</injarNotExistsSkip>-->
            <!--                    <outputDirectory>${project.basedir}/target</outputDirectory>-->
            <!--                    <obfuscate>true</obfuscate>-->
            <!--                    <generateTemporaryConfigurationFile>true</generateTemporaryConfigurationFile>-->
            <!--                    <proguardInclude>proguard/proguard.cfg</proguardInclude>-->

            <!--                    <libs>-->
            <!--                        <lib>${java.home}</lib>-->
            <!--                    </libs>-->
            <!--                </configuration>-->

            <!--                <dependencies>-->
            <!--                    <dependency>-->
            <!--                        <groupId>com.guardsquare</groupId>-->
            <!--                        <artifactId>proguard-base</artifactId>-->
            <!--                        <version>7.6.1</version>-->
            <!--                        <scope>runtime</scope>-->
            <!--                    </dependency>-->
            <!--                </dependencies>-->
            <!--            </plugin>-->

            <!--打包插件 打包为tar.gz 并且包含lib conf bin 配置https://maven.apache.org/plugins/maven-assembly-plugin/examples/multimodule/module-binary-inclusion-simple.html-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <descriptors>
                        <descriptor>assembly/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>